%section
  %form{ action: "/config", method: "post" }
    .line-behind-text
      %h1 Google Credentials
    %p Follow these steps to setup your Flash application to use the Google OAuth API:
    %ol.default
      %li
        go to
        %a{ href: "https://console.developers.google.com/project" } the google developer console
      %li
        click on
        %code Create Project
        %img{ src: image_path('create_project.png') }
      %li Name your project (whatever you called this application on heroku is a good idea)
      %li Wait for the project to be created (you will be brought to the Project Dashboard)
      %li
        Click on
        %code APIs & Auth
        on the left menu and then click on
        %code credentials
        %img{ src: image_path('project_dashboard_api_credentials.png') }
      %li
        Click on
        %code Create new Client ID
      %li
        Choose
        %code Web Application
      %li
        Click
        %code configure consent screen
      %li
        Fill out the Consent Screen form. The
        %code Product Name
        should roughly match this application's name (to avoid confusion)
      %li
        Click
        %code Save
      %li
        Use the Heroku URL to fill the "authorized javascript origins" portion of the final Create Client ID form
        %img{ src: image_path('create_project.png') }
      %li
        Leave the callback set as
        %code https://flashmycompanyname.herokuapp.com/oauth2callback
      %li
        Click
        %code Create Client ID
      %li
        %p Use the credentials to fill the form fields below (warning: do not also skip the next step!)
        %img{ src: image_path('client_id_and_secret.png')}
        %label{ for: "client_id" } Google Client ID
        %input{ type: "text", name: "google_client_id", value: client_id }
        %label{ for: "client_secret" } Google Client Secret
        %input{ type: "text", name: "google_client_secret", value: client_secret }
      %li
        You must also turn on the
        %code Google+ API
        from the APIs section of the menu. Otherwise, OAuth will not work correctly.
    .line-behind-text
      %h1 Company Information
    %label{ for: "company_name" } Company Name
    %input{ type: "text", name: "company_name", value: company_name }
    %label{ for: "regex_matcher" }
      Regex Email Domain Filter
      .tooltip-item
        %code ?
        .tooltip
          %p
            This is used to filter out email addresses that do not match your company's domain.
          %p
            You can use
            %a{href: "http://rubular.com"} rubular.com
            to test that the regular expression matches correctly.
          %p
            The regex match is performed on all characters after the
            %code @
            symbol in the email address of a user connected through Google:
          %p
            %code some_user_name@/YOUR_REGEX/
    %input{ type: "text", name: "regex_matcher", value: regex_matcher, placeholder: "e.g. google\\.com" }
    .line-behind-text
      %h1 App Information
    %label{ for: "url" } URL
    %input{ type: "text", name: "url", value: url, placeholder: "e.g. http://flashmycompanyname.herokuapp.com" }
    %label{ for: "url" }
      App Name
      .tooltip-item
        %code ?
        .tooltip
          %p
            This is used as the shortname to help the user set up the app on the
            %code About
            page.
          %p Works best when the first few letters match the first few letters of the url above.
    %input{ type: "text", name: "app_name", value: app_name, placeholder: 'FlashMyCompanyName' }
    %label
      Users can create Commands
      .tooltip-item
        %code ?
        .tooltip
          %p When disabled, only authorized admins can create/edit commands.
    %label.label-switch
      %input{ type: "checkbox", name: "command_editing_enabled", checked: command_editing_enabled }
      .checkbox
    %label{ for: "admin_users" }
      %i optional
      Authorized Admin Email Addresses
      %i **warning**
      .tooltip-item
        %code ?
        .tooltip
          %p A comma-separated list of administrators that have access to the "configure" page.
          %p DO NOT set this until you have confirmed the OAuth credentials above work.
          %p This could potentially lock you out of the application (if OAuth does not work, or you add the wrong email addresses here)
    %input{ type: "text", name: "admin_users", value: admin_users, placeholder: "admin1@yourcompany.com, admin2@yourcompany.com"}
    %p
      %input{ type: "submit", value: "Save Changes" }
